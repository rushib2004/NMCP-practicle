# function to be solved

def f(x,y):

return x+y**2

# or

# f lambda x: x+y**2

# RK-4 method

def rk4(x0, y0, xn, n):

# Calculating step size

h = (xn-x0)/n

print('\n---SOLUTION')

print(' ----')

print('x0\ty0\tyn')

----')

print('--

for i in range(n):

k1h (f(x0, yo))

k2h (f((x0+h/2), (y0+k1/2)))

k3h* (f((x0+h/2), (y0+k2/2)))

k4h (f((x0+h), (y0+k3)))

k = (k1+2*k2+2*k3+k4)/6

yn = y + k

print('%.4f\t%.4f\t%.4f'% (x0,y0,yn))

print('

y = yn

x0 = x0+h

print('\nAt x=%.4f, y=%.4f' %(xn,yn))

# Inputs

print('Enter initial conditions:')

x0= float(input('x0 ='))

yo float(input('y0 ='))

print('Enter calculation point: ') xn float(input('xn = '))

print('Enter number of steps:') step int(input('Number of steps = '))

# RK4 method call rk4(x0, y0, xn, step)

Enter initial conditions:

x0 0

Ñƒ = 1

Enter calculation point:

xn = 0.2

Enter number of steps:

Number of steps 2

-SOLUTION--

x0 yn

0.0000 1.0000 1.1165

0.1000 1.1165 1.2736

At x=0.2000, y=1.2736
